<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='All (Customer Persona)' inline='true' name='federated.16mc82b0khhz72144bqao120q6tg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Customer Persona' name='excel-direct.1esomxo1kygww418utgwe1581db5'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/pratikgoswami/Library/Mobile Documents/com~apple~CloudDocs/Datajam/Customer Persona.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1esomxo1kygww418utgwe1581db5' name='All' table='[All$]' type='table'>
          <columns gridOrigin='A1:AS155:no:A1:AS155:1' header='no' lost='0' outcome='1' processed='4935'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Geography' ordinal='1' />
            <column datatype='integer' name='January 2018' ordinal='2' />
            <column datatype='integer' name='February 2018' ordinal='3' />
            <column datatype='integer' name='March 2018' ordinal='4' />
            <column datatype='integer' name='April 2018' ordinal='5' />
            <column datatype='integer' name='May 2018' ordinal='6' />
            <column datatype='integer' name='June 2018' ordinal='7' />
            <column datatype='integer' name='July 2018' ordinal='8' />
            <column datatype='integer' name='August 2018' ordinal='9' />
            <column datatype='integer' name='September 2018' ordinal='10' />
            <column datatype='integer' name='October 2018' ordinal='11' />
            <column datatype='integer' name='November 2018' ordinal='12' />
            <column datatype='integer' name='December 2018' ordinal='13' />
            <column datatype='integer' name='January 2019' ordinal='14' />
            <column datatype='integer' name='February 2019' ordinal='15' />
            <column datatype='integer' name='March 2019' ordinal='16' />
            <column datatype='integer' name='April 2019' ordinal='17' />
            <column datatype='integer' name='May 2019' ordinal='18' />
            <column datatype='integer' name='June 2019' ordinal='19' />
            <column datatype='integer' name='July 2019' ordinal='20' />
            <column datatype='integer' name='August 2019' ordinal='21' />
            <column datatype='integer' name='September 2019' ordinal='22' />
            <column datatype='integer' name='October 2019' ordinal='23' />
            <column datatype='integer' name='November 2019' ordinal='24' />
            <column datatype='integer' name='December 2019' ordinal='25' />
            <column datatype='integer' name='January 2020' ordinal='26' />
            <column datatype='integer' name='February 2020' ordinal='27' />
            <column datatype='integer' name='March 2020' ordinal='28' />
            <column datatype='integer' name='April 2020' ordinal='29' />
            <column datatype='integer' name='May 2020' ordinal='30' />
            <column datatype='integer' name='June 2020' ordinal='31' />
            <column datatype='integer' name='July 2020' ordinal='32' />
            <column datatype='integer' name='August 2020' ordinal='33' />
            <column datatype='integer' name='September 2020' ordinal='34' />
            <column datatype='integer' name='October 2020' ordinal='35' />
            <column datatype='integer' name='November 2020' ordinal='36' />
            <column datatype='integer' name='December 2020' ordinal='37' />
            <column datatype='integer' name='January 2021' ordinal='38' />
            <column datatype='integer' name='February 2021' ordinal='39' />
            <column datatype='integer' name='March 2021' ordinal='40' />
            <column datatype='integer' name='April 2021' ordinal='41' />
            <column datatype='integer' name='May 2021' ordinal='42' />
            <column datatype='integer' name='June 2021' ordinal='43' />
            <column datatype='integer' name='July 2021' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1esomxo1kygww418utgwe1581db5' name='All' table='[All$]' type='table'>
          <columns gridOrigin='A1:AS155:no:A1:AS155:1' header='no' lost='0' outcome='1' processed='4935'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Geography' ordinal='1' />
            <column datatype='integer' name='January 2018' ordinal='2' />
            <column datatype='integer' name='February 2018' ordinal='3' />
            <column datatype='integer' name='March 2018' ordinal='4' />
            <column datatype='integer' name='April 2018' ordinal='5' />
            <column datatype='integer' name='May 2018' ordinal='6' />
            <column datatype='integer' name='June 2018' ordinal='7' />
            <column datatype='integer' name='July 2018' ordinal='8' />
            <column datatype='integer' name='August 2018' ordinal='9' />
            <column datatype='integer' name='September 2018' ordinal='10' />
            <column datatype='integer' name='October 2018' ordinal='11' />
            <column datatype='integer' name='November 2018' ordinal='12' />
            <column datatype='integer' name='December 2018' ordinal='13' />
            <column datatype='integer' name='January 2019' ordinal='14' />
            <column datatype='integer' name='February 2019' ordinal='15' />
            <column datatype='integer' name='March 2019' ordinal='16' />
            <column datatype='integer' name='April 2019' ordinal='17' />
            <column datatype='integer' name='May 2019' ordinal='18' />
            <column datatype='integer' name='June 2019' ordinal='19' />
            <column datatype='integer' name='July 2019' ordinal='20' />
            <column datatype='integer' name='August 2019' ordinal='21' />
            <column datatype='integer' name='September 2019' ordinal='22' />
            <column datatype='integer' name='October 2019' ordinal='23' />
            <column datatype='integer' name='November 2019' ordinal='24' />
            <column datatype='integer' name='December 2019' ordinal='25' />
            <column datatype='integer' name='January 2020' ordinal='26' />
            <column datatype='integer' name='February 2020' ordinal='27' />
            <column datatype='integer' name='March 2020' ordinal='28' />
            <column datatype='integer' name='April 2020' ordinal='29' />
            <column datatype='integer' name='May 2020' ordinal='30' />
            <column datatype='integer' name='June 2020' ordinal='31' />
            <column datatype='integer' name='July 2020' ordinal='32' />
            <column datatype='integer' name='August 2020' ordinal='33' />
            <column datatype='integer' name='September 2020' ordinal='34' />
            <column datatype='integer' name='October 2020' ordinal='35' />
            <column datatype='integer' name='November 2020' ordinal='36' />
            <column datatype='integer' name='December 2020' ordinal='37' />
            <column datatype='integer' name='January 2021' ordinal='38' />
            <column datatype='integer' name='February 2021' ordinal='39' />
            <column datatype='integer' name='March 2021' ordinal='40' />
            <column datatype='integer' name='April 2021' ordinal='41' />
            <column datatype='integer' name='May 2021' ordinal='42' />
            <column datatype='integer' name='June 2021' ordinal='43' />
            <column datatype='integer' name='July 2021' ordinal='44' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>13</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AS155:no:A1:AS155:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4935</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Geography]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>Geography</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>January 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[January 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>January 2018</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>February 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[February 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>February 2018</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>March 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[March 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>March 2018</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>April 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[April 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>April 2018</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>May 2018</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>June 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[June 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>June 2018</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>July 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[July 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>July 2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>August 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[August 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>August 2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>September 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[September 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>September 2018</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>October 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[October 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>October 2018</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>November 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[November 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>November 2018</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>December 2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[December 2018]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>December 2018</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>January 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[January 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>January 2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>February 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[February 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>February 2019</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>March 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[March 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>March 2019</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>April 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[April 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>April 2019</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>May 2019</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>June 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[June 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>June 2019</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>July 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[July 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>July 2019</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>August 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[August 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>August 2019</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>September 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[September 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>September 2019</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>October 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[October 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>October 2019</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>November 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[November 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>November 2019</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>December 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[December 2019]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>December 2019</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>January 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[January 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>January 2020</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>February 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[February 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>February 2020</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>March 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[March 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>March 2020</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>April 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[April 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>April 2020</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>May 2020</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>June 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[June 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>June 2020</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>July 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[July 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>July 2020</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>August 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[August 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>August 2020</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>September 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[September 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>September 2020</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>October 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[October 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>October 2020</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>November 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[November 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>November 2020</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>December 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[December 2020]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>December 2020</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>January 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[January 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>January 2021</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>February 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[February 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>February 2021</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>March 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[March 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>March 2021</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>April 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[April 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>April 2021</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>May 2021</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>June 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[June 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>June 2021</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>July 2021</remote-name>
            <remote-type>20</remote-type>
            <local-name>[July 2021]</local-name>
            <parent-name>[All]</parent-name>
            <remote-alias>July 2021</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_28D5D4A198A0499C88498067251A2C33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
      <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All' datatype='table' name='[__tableau_internal_object_id__].[All_28D5D4A198A0499C88498067251A2C33]' role='measure' type='quantitative' />
      <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
      <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='ordinal' measure-ordering='ordinal' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All' id='All_28D5D4A198A0499C88498067251A2C33'>
            <properties context=''>
              <relation connection='excel-direct.1esomxo1kygww418utgwe1581db5' name='All' table='[All$]' type='table'>
                <columns gridOrigin='A1:AS155:no:A1:AS155:1' header='no' lost='0' outcome='1' processed='4935'>
                  <column datatype='string' name='Category' ordinal='0' />
                  <column datatype='string' name='Geography' ordinal='1' />
                  <column datatype='integer' name='January 2018' ordinal='2' />
                  <column datatype='integer' name='February 2018' ordinal='3' />
                  <column datatype='integer' name='March 2018' ordinal='4' />
                  <column datatype='integer' name='April 2018' ordinal='5' />
                  <column datatype='integer' name='May 2018' ordinal='6' />
                  <column datatype='integer' name='June 2018' ordinal='7' />
                  <column datatype='integer' name='July 2018' ordinal='8' />
                  <column datatype='integer' name='August 2018' ordinal='9' />
                  <column datatype='integer' name='September 2018' ordinal='10' />
                  <column datatype='integer' name='October 2018' ordinal='11' />
                  <column datatype='integer' name='November 2018' ordinal='12' />
                  <column datatype='integer' name='December 2018' ordinal='13' />
                  <column datatype='integer' name='January 2019' ordinal='14' />
                  <column datatype='integer' name='February 2019' ordinal='15' />
                  <column datatype='integer' name='March 2019' ordinal='16' />
                  <column datatype='integer' name='April 2019' ordinal='17' />
                  <column datatype='integer' name='May 2019' ordinal='18' />
                  <column datatype='integer' name='June 2019' ordinal='19' />
                  <column datatype='integer' name='July 2019' ordinal='20' />
                  <column datatype='integer' name='August 2019' ordinal='21' />
                  <column datatype='integer' name='September 2019' ordinal='22' />
                  <column datatype='integer' name='October 2019' ordinal='23' />
                  <column datatype='integer' name='November 2019' ordinal='24' />
                  <column datatype='integer' name='December 2019' ordinal='25' />
                  <column datatype='integer' name='January 2020' ordinal='26' />
                  <column datatype='integer' name='February 2020' ordinal='27' />
                  <column datatype='integer' name='March 2020' ordinal='28' />
                  <column datatype='integer' name='April 2020' ordinal='29' />
                  <column datatype='integer' name='May 2020' ordinal='30' />
                  <column datatype='integer' name='June 2020' ordinal='31' />
                  <column datatype='integer' name='July 2020' ordinal='32' />
                  <column datatype='integer' name='August 2020' ordinal='33' />
                  <column datatype='integer' name='September 2020' ordinal='34' />
                  <column datatype='integer' name='October 2020' ordinal='35' />
                  <column datatype='integer' name='November 2020' ordinal='36' />
                  <column datatype='integer' name='December 2020' ordinal='37' />
                  <column datatype='integer' name='January 2021' ordinal='38' />
                  <column datatype='integer' name='February 2021' ordinal='39' />
                  <column datatype='integer' name='March 2021' ordinal='40' />
                  <column datatype='integer' name='April 2021' ordinal='41' />
                  <column datatype='integer' name='May 2021' ordinal='42' />
                  <column datatype='integer' name='June 2021' ordinal='43' />
                  <column datatype='integer' name='July 2021' ordinal='44' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Beer, Wine and Liq'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Beer, Wine and Liquor Stores&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#d4d4d4e6' />
            <format attr='border-color' id='annotation_0' value='#555555' />
            <format attr='border-width' id='annotation_0' value='0' />
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='fill-color' id='annotation_0' value='#d4d4d4e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='374' />
                <format attr='maxwidth' value='374' />
                <format attr='minheight' value='860' />
                <format attr='maxheight' value='860' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</rows>
        <cols>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</value>
                <value>2763367.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</value>
                <value>2136811.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</value>
                <value>2611568.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</value>
                <value>2048391.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</value>
                <value>2600921.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</value>
                <value>1991186.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                <value>2647751.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</value>
                <value>2636307.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='21.4709' text-width='113'>
            <formatted-text>
              <run bold='true'>Summer 2020</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Canada&quot;</value>
                    <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</value>
                    <value>2636307.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='37' y='-36' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='22.6716' text-width='120'>
            <formatted-text>
              <run bold='true'>Summer 2021</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Canada&quot;</value>
                    <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                    <value>2647751.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='32' y='-45' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{ECB852AA-22C4-42DE-854B-CDCE460BC577}' />
    </worksheet>
    <worksheet name='Beer, Wine and Liq (BC)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Beer, Wine and Liquor Stores&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;British Columbia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]' value='C4105%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='392' />
                <format attr='maxwidth' value='392' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</rows>
        <cols>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;British Columbia&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                <value>559311.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;British Columbia&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</value>
                <value>553673.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;British Columbia&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</value>
                <value>443686.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;British Columbia&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</value>
                <value>437008.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7C7ABB96-6FB3-45A1-9A6D-5B2CB36334A0}' />
    </worksheet>
    <worksheet name='Cannibus'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Cannibus&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</rows>
        <cols>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{C837B19A-D654-45C6-B000-BDC038B6AC17}' />
    </worksheet>
    <worksheet name='Clothing &amp; acc'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Clothing &amp; Clothing Accessories Stores&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</rows>
        <cols>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</value>
                <value>385399.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                <value>2957260.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</value>
                <value>2802985.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{C84B05C5-F30C-4D64-9E2B-9726FCF49D34}' />
    </worksheet>
    <worksheet name='Electronics'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Electronics and Appliance Store&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</rows>
        <cols>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</value>
                <value>1966599.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</value>
                <value>1962119.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</value>
                <value>1815677.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</value>
                <value>1621848.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</value>
                <value>1913919.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</value>
                <value>1797074.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7ED58CE3-EDBE-4961-8E81-E6061EA1193C}' />
    </worksheet>
    <worksheet name='Gas'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Cannibus&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Gasoline Stations&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='width' field='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' value='25' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</rows>
        <cols>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</value>
                <value>2815282.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                <value>6360738.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='109'>
            <formatted-text>
              <run bold='true'>All time high!</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                      <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Canada&quot;</value>
                    <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</value>
                    <value>6360738.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-116' y='-23' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{B9419C97-989F-4890-B16E-E6723D1CDFBA}' />
    </worksheet>
    <worksheet name='Supermarkets'>
      <table>
        <view>
          <datasources>
            <datasource caption='All (Customer Persona)' name='federated.16mc82b0khhz72144bqao120q6tg' />
          </datasources>
          <datasource-dependencies datasource='federated.16mc82b0khhz72144bqao120q6tg'>
            <column datatype='integer' name='[April 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[April 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[August 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[December 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[December 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[February 2021]' role='measure' type='quantitative' />
            <column datatype='string' name='[Geography]' role='dimension' type='nominal' />
            <column datatype='integer' name='[January 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[January 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[July 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[June 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[March 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May 2021]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[November 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[October 2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[September 2020]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geography]' derivation='None' name='[none:Geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[April 2018]' derivation='Sum' name='[sum:April 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2019]' derivation='Sum' name='[sum:April 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2020]' derivation='Sum' name='[sum:April 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[April 2021]' derivation='Sum' name='[sum:April 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2018]' derivation='Sum' name='[sum:August 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2019]' derivation='Sum' name='[sum:August 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[August 2020]' derivation='Sum' name='[sum:August 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2018]' derivation='Sum' name='[sum:December 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2019]' derivation='Sum' name='[sum:December 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[December 2020]' derivation='Sum' name='[sum:December 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2018]' derivation='Sum' name='[sum:February 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2019]' derivation='Sum' name='[sum:February 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2020]' derivation='Sum' name='[sum:February 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[February 2021]' derivation='Sum' name='[sum:February 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2018]' derivation='Sum' name='[sum:January 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2019]' derivation='Sum' name='[sum:January 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2020]' derivation='Sum' name='[sum:January 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[January 2021]' derivation='Sum' name='[sum:January 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2018]' derivation='Sum' name='[sum:July 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2019]' derivation='Sum' name='[sum:July 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2020]' derivation='Sum' name='[sum:July 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[July 2021]' derivation='Sum' name='[sum:July 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2018]' derivation='Sum' name='[sum:June 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2019]' derivation='Sum' name='[sum:June 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2020]' derivation='Sum' name='[sum:June 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[June 2021]' derivation='Sum' name='[sum:June 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2018]' derivation='Sum' name='[sum:March 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2019]' derivation='Sum' name='[sum:March 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2020]' derivation='Sum' name='[sum:March 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[March 2021]' derivation='Sum' name='[sum:March 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2018]' derivation='Sum' name='[sum:May 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2019]' derivation='Sum' name='[sum:May 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2020]' derivation='Sum' name='[sum:May 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May 2021]' derivation='Sum' name='[sum:May 2021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2018]' derivation='Sum' name='[sum:November 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2019]' derivation='Sum' name='[sum:November 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[November 2020]' derivation='Sum' name='[sum:November 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2018]' derivation='Sum' name='[sum:October 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2019]' derivation='Sum' name='[sum:October 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[October 2020]' derivation='Sum' name='[sum:October 2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2018]' derivation='Sum' name='[sum:September 2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2019]' derivation='Sum' name='[sum:September 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[September 2020]' derivation='Sum' name='[sum:September 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:August 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:September 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:October 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:January 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:February 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:April 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:May 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:June 2021:qk]&quot;</bucket>
              <bucket>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:July 2021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Supermarkets &amp; other&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]'>
            <groupfilter function='member' level='[none:Geography:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</column>
            <column>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' data-class='total' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk] / [federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names])</rows>
        <cols>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:March 2020:qk]&quot;</value>
                <value>9154356.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{ECAAA351-963E-4E01-8A16-02806CC74512}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Electronics'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2020:qk]&quot;</value>
                <value>1966599.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2020:qk]&quot;</value>
                <value>1962119.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2019:qk]&quot;</value>
                <value>1815677.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2019:qk]&quot;</value>
                <value>1621848.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:December 2018:qk]&quot;</value>
                <value>1913919.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
                  <field>[federated.16mc82b0khhz72144bqao120q6tg].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>&quot;[federated.16mc82b0khhz72144bqao120q6tg].[sum:November 2018:qk]&quot;</value>
                <value>1797074.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{992040A9-A541-4C00-9690-FBF15BD880E6}' />
    </window>
    <window class='worksheet' name='Cannibus'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F57297F-BAA3-4ADC-9155-86244B978695}' />
    </window>
    <window class='worksheet' name='Gas'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='208'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC4454FF-116E-481A-9CB4-F34809F3CCC0}' />
    </window>
    <window class='worksheet' name='Clothing &amp; acc'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card size='31' type='pages' />
            <card size='70' type='filters' />
            <card size='92' type='marks' />
            <card size='322' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7E8E7FA-D2A1-40A0-A95F-F6ECE4942777}' />
    </window>
    <window class='worksheet' name='Beer, Wine and Liq'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15C80B52-8BC8-4FA3-9904-A57AAD328FB7}' />
    </window>
    <window class='worksheet' name='Beer, Wine and Liq (BC)'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB42ADB8-CFB8-4DC1-912D-0C47CAB7E4B9}' />
    </window>
    <window class='worksheet' maximized='true' name='Supermarkets'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]' type='filter' />
            <card param='[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[:Measure Names]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Category:nk]</field>
            <field>[federated.16mc82b0khhz72144bqao120q6tg].[none:Geography:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{995BA179-7098-4715-8061-F8E48B41F572}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Beer, Wine and Liq' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='318' name='Beer, Wine and Liq (BC)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Cannibus' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Clothing &amp; acc' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Electronics' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Gas' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Supermarkets' width='384'>
      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
      ePUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
